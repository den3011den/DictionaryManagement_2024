@inject DialogService DialogService

@code {


    protected override async Task OnInitializedAsync()
    {
        await base.OnInitializedAsync();

    }

    public async Task<dynamic> ShowYesOrNoDialogBox(string windowTitle, string windowMessage, string actionButtonText, string cancelButtonText)
    {
        var result = await DialogService.OpenAsync(windowTitle, ds =>
    @<RadzenStack Gap="1.5rem" Style="justify-content: center; align-items: center;">
        <p>@windowMessage</p>
        <RadzenStack Orientation="Orientation.Horizontal" Gap="0.5rem" AlignItems="AlignItems.Center" JustifyContent="JustifyContent.SpaceBetween">
            <RadzenStack Orientation="Orientation.Horizontal">
                <RadzenButton Text="@actionButtonText" Click="() => ds.Close(true)" Style="width: 170px;" />
                <RadzenButton Text="@cancelButtonText" Click="() => ds.Close(false)" ButtonStyle="ButtonStyle.Light" />
            </RadzenStack>
        </RadzenStack>
    </RadzenStack>
    , null);

        if (result != null)
            return result;
        else
            return false;

    }
}
